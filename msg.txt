diff --git a/.github/workflows/ci.yml b/.github/workflows/ci.yml
index dfb18f3..c04e4d1 100644
--- a/.github/workflows/ci.yml
+++ b/.github/workflows/ci.yml
@@ -1,47 +1,57 @@
-# Workflow ini akan melakukan build dan testing terhadap development app.
-name: Dev Testing ðŸ”Ž
+name: Forum API CI (Docker Compose with RDS)
 
 on:
   pull_request:
     branches: ["main"]
 
 jobs:
-  build-testing:
-    name: Build and Testing
+  test:
     runs-on: ubuntu-latest
+
+    strategy:
+      matrix:
+        node-version: [20.x]
+
     steps:
       - name: Checkout repository
-        uses: actions/checkout@v2
+        uses: actions/checkout@v3
+
+      - name: Set up Node.js ${{ matrix.node-version }}
+        uses: actions/setup-node@v3
+        with:
+          node-version: ${{ matrix.node-version }}
+          cache: "npm"
 
-      - name: Create .env file
+      - name: Create .env file for application runtime
         run: |
-          echo "# HTTP SERVER" > .env
-          echo "PORT=${{ secrets.APP_PORT }}" >> .env
-
-          echo "# Database Production" >> .env
-          echo "POSTGRES_USER=${{ secrets.DB_USER }}" >> .env
-          echo "POSTGRES_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
-          echo "POSTGRES_DB=${{ vars.DB_DBNAME }}" >> .env
-          echo "POSTGRES_HOST=${{ secrets.DB_HOST }}" >> .env
-          echo "POSTGRES_PORT=${{ secrets.DB_PORT }}" >> .env
-
-          echo "# Database Test"
-          echo "POSTGRES_USER_TEST=${{ secrets.DB_USER_TEST }}" >> .env
-          echo "POSTGRES_PASSWORD_TEST=${{ secrets.DB_PASSWORD_TEST }}" >> .env
-          echo "POSTGRES_DB_TEST=${{ vars.DB_DBNAME_TEST }}" >> .env
-          echo "POSTGRES_HOST_TEST=${{ secrets.DB_HOST_TEST }}" >> .env
-          echo "POSTGRES_PORT_TEST=${{ secrets.DB_PORT_TEST }}" >> .env
-
-          echo "# JWT Token" >> .env
+          echo "NODE_ENV=test" > .env
+          echo "PGHOST_TEST=${{ secrets.DB_HOST_TEST }}" >> .env
+          echo "PGPORT_TEST=${{ secrets.DB_PORT_TEST }}" >> .env
+          echo "PGUSER_TEST=${{ secrets.DB_USER_TEST }}" >> .env
+          echo "PGPASSWORD_TEST=${{ secrets.DB_PASSWORD_TEST }}" >> .env
+          echo "PGDATABASE_TEST=${{ vars.DB_DBNAME_TEST }}" >> .env
           echo "ACCESS_TOKEN_KEY=${{ secrets.APP_ACCESS_TOKEN_KEY }}" >> .env
           echo "REFRESH_TOKEN_KEY=${{ secrets.APP_REFRESH_TOKEN_KEY }}" >> .env
-          echo "ACCCESS_TOKEN_AGE=${{ secrets.APP_ACCCESS_TOKEN_AGE }}" >> .env
-
-      - name: Build and Run Container
-        run: |
-          sudo docker compose up --build --detach
+          echo "ACCESS_TOKEN_AGE=${{ secrets.APP_ACCCESS_TOKEN_AGE }}" >> .env
+          echo "HOST=${{vars.DEV_URL}}"
+          echo "PORT=${{secrets.APP_PORT}}" >> .env
 
-      - name: Hit Endpoint
+      - name: Create database migration config file for test
         run: |
-          sleep 20
-          curl ${{ vars.DEV_URL }}
+          mkdir -p config/database
+          echo '{' > config/database/test.json
+          echo '  "user": "${{ secrets.DB_USER_TEST }}",' >> config/database/test.json
+          echo '  "password": "${{ secrets.DB_PASSWORD_TEST }}",' >> config/database/test.json
+          echo '  "host": "${{ secrets.DB_HOST_TEST }}",' >> config/database/test.json
+          echo '  "port": ${{ secrets.DB_PORT_TEST }},' >> config/database/test.json
+          echo '  "database": "${{ vars.DB_DBNAME_TEST }}"' >> config/database/test.json
+          echo '}' >> config/database/test.json
+
+      - name: Build Docker images
+        run: docker-compose build api
+
+      - name: Run database migrations for test environment (on RDS)
+        run: docker-compose run --rm api npm run migrate:test
+
+      - name: Run tests (Unit, Integration, Functional)
+        run: docker-compose run --rm api npm run test
